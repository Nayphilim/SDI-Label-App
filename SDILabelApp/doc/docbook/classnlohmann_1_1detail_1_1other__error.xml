<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classnlohmann_1_1detail_1_1other__error">
<title>nlohmann::detail::other_error Class Reference</title>
<indexterm><primary>nlohmann::detail::other_error</primary></indexterm>
<para>

<para>exception indicating other library errors </para>
 
</para>
<para>
<computeroutput>#include &lt;json.hpp&gt;</computeroutput>
</para>
<para>Inheritance diagram for nlohmann::detail::other_error:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1detail_1_1other__error.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_classnlohmann_1_1detail_1_1other__error">other_error</link> <link linkend="_classnlohmann_1_1detail_1_1other__error_1a87e8ab894e8c85c0d97a0919782d3683">create</link> (int id_, const std::string &amp;what_arg)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1other__error_1adf9227d6ca5161508f6a598a0dc6e7cd">other_error</link> (int id_, const char *what_arg)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>exception indicating other library errors </para>



<para>This exception is thrown in case of errors that cannot be classified with the other exception types.</para>

<para>Exceptions have ids 5xx.</para>

<para><informaltable frame="all">
    <tgroup cols="3" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
      <colspec colname='c3'/>
<thead>
      <row >
<entry>
<para>name / id </para>
</entry><entry>
<para>example message </para>
</entry><entry>
<para>description  </para>
</entry></row>
</thead><tbody>
      <row >
<entry>
<para>json.exception.other_error.501 </para>
</entry><entry>
<para>unsuccessful: {&quot;op&quot;:&quot;test&quot;,&quot;path&quot;:&quot;/baz&quot;, &quot;value&quot;:&quot;bar&quot;} </para>
</entry><entry>
<para>A JSON Patch operation &apos;test&apos; failed. The unsuccessful operation is also printed.  </para>
</entry></row>
    </tbody>
    </tgroup>
</informaltable>
</para>

<para><formalpara><title>See also</title>

<para>- <link linkend="_classnlohmann_1_1detail_1_1exception">exception</link> for the base class of the library exceptions </para>

<para>- <link linkend="_classnlohmann_1_1detail_1_1parse__error">parse_error</link> for exceptions indicating a parse error </para>

<para>- <link linkend="_classnlohmann_1_1detail_1_1invalid__iterator">invalid_iterator</link> for exceptions indicating errors with iterators </para>

<para>- <link linkend="_classnlohmann_1_1detail_1_1type__error">type_error</link> for exceptions indicating executing a member function with a wrong type </para>

<para>- <link linkend="_classnlohmann_1_1detail_1_1out__of__range">out_of_range</link> for exceptions indicating access out of the defined range</para>
</formalpara>
@liveexample{The following code shows how an <computeroutput><link linkend="_classnlohmann_1_1detail_1_1other__error">other_error</link></computeroutput> exception can be caught.,<link linkend="_classnlohmann_1_1detail_1_1other__error">other_error</link>}</para>

<para><formalpara><title>Since</title>

<para>version 3.0.0 </para>
</formalpara>
</para>
<para>
Definition at line 2477 of file json.hpp.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classnlohmann_1_1detail_1_1other__error_1adf9227d6ca5161508f6a598a0dc6e7cd"/>    <section>
    <title>other_error()</title>
<indexterm><primary>other_error</primary><secondary>nlohmann::detail::other_error</secondary></indexterm>
<indexterm><primary>nlohmann::detail::other_error</primary><secondary>other_error</secondary></indexterm>
<para><computeroutput>nlohmann::detail::other_error::other_error (int id_, const char * what_arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line 2488 of file json.hpp.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classnlohmann_1_1detail_1_1other__error_1a87e8ab894e8c85c0d97a0919782d3683"/>    <section>
    <title>create()</title>
<indexterm><primary>create</primary><secondary>nlohmann::detail::other_error</secondary></indexterm>
<indexterm><primary>nlohmann::detail::other_error</primary><secondary>create</secondary></indexterm>
<para><computeroutput>static <link linkend="_classnlohmann_1_1detail_1_1other__error">other_error</link> nlohmann::detail::other_error::create (int id_, const std::string &amp; what_arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line 2480 of file json.hpp.</para>
</section>
</section>
</section>
