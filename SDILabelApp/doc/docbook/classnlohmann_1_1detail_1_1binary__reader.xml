<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classnlohmann_1_1detail_1_1binary__reader">
<title>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt; Class Template Reference</title>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary></indexterm>
<para>

<para>deserialization of CBOR, MessagePack, and UBJSON values </para>
 
</para>
<para>
<computeroutput>#include &lt;json.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aed84f0302eb232d3b69f7653bef2337a">binary_reader</link> (<link linkend="_namespacenlohmann_1_1detail_1ae132f8cd5bb24c5e9b40ad0eafedf1c2">input_adapter_t</link> adapter)</para>

<para>create a binary reader </para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aacbece7dfa1698dfb3f22c90922d7244">binary_reader</link> (const <link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link> &amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a254d91b10c2f4579634b6f70ffc1ef16">binary_reader</link> (<link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link> &amp;&amp;)=default</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link> &amp; <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a87826b833ee7fec146c97233bb0f6ab8">operator=</link> (const <link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link> &amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link> &amp; <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a7ba0e555da725a2efa17048e67aec9a9">operator=</link> (<link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link> &amp;&amp;)=default</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a18e0a63e22dbdad5f6964276b81b813a">~binary_reader</link> ()=default</para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1ab94a54d6e595c2620b07589cf4116256">sax_parse</link> (const <link linkend="_namespacenlohmann_1_1detail_1aa554fc6a11519e4f347deb25a9f0db40">input_format_t</link> format, <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a43c5dc6a3219f64a7824d7ba9c7b14ae">json_sax_t</link> *sax_, const bool strict=true)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static constexpr bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a1e31dbfcf9567c8c2d4f0e4eb1b0230a">little_endianess</link> (int num=1) noexcept</para>

<para>determine system byte order </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Types    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa093d9bce6c6ec715a049f2a26d7c4d5">number_integer_t</link> = typename BasicJsonType::number_integer_t</para>
</listitem>
            <listitem><para>using <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a13bb5e2014c4cdf013d8715157cb456e">number_unsigned_t</link> = typename BasicJsonType::number_unsigned_t</para>
</listitem>
            <listitem><para>using <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1af4488e5400da86636fd2f4d0171bbf53">number_float_t</link> = typename BasicJsonType::number_float_t</para>
</listitem>
            <listitem><para>using <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> = typename BasicJsonType::string_t</para>
</listitem>
            <listitem><para>using <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a14ea9b7c18c3d863c47263fc1d7c27a6">internal_binary_t</link> = typename BasicJsonType::internal_binary_t</para>
</listitem>
            <listitem><para>using <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a43c5dc6a3219f64a7824d7ba9c7b14ae">json_sax_t</link> = SAX</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a950f6ef800421fef9499af1c4c8918f5">parse_bson_internal</link> ()</para>

<para>Reads in a BSON-object and passes it to the SAX-parser. </para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a075d20a35a09496c504c7dff135823ed">get_bson_cstr</link> (<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> &amp;result)</para>

<para>Parses a C-style string from the BSON input. </para>
</listitem>
            <listitem><para>template&lt;typename NumberType &gt; </para><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a46bf64d7193eea97cac6dd4d4abdb4fa">get_bson_string</link> (const NumberType len, <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> &amp;result)</para>

<para>Parses a zero-terminated string of length <emphasis>len</emphasis> from the BSON input. </para>
</listitem>
            <listitem><para>template&lt;typename NumberType &gt; </para><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a5aca213426204f72a36d7626eeb13bb4">get_bson_binary</link> (const NumberType len, <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a14ea9b7c18c3d863c47263fc1d7c27a6">internal_binary_t</link> &amp;result)</para>

<para>Parses a byte array input of length <emphasis>len</emphasis> from the BSON input. </para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a2fdd24de008063e7fef896327daeffa1">parse_bson_element_internal</link> (const int element_type, const std::size_t element_type_parse_position)</para>

<para>Read a BSON document element of the given <emphasis>element_type</emphasis>. </para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a7316619ace9efdc718d04e7b8f807e1e">parse_bson_element_list</link> (const bool is_array)</para>

<para>Read a BSON element list (as specified in the BSON-spec) </para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a650dd6f9f05e86eb62cd4717301a5ffa">parse_bson_array</link> ()</para>

<para>Reads an array from the BSON input and passes it to the SAX-parser. </para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a2fc47768d484a22fcd04e20106da1399">parse_cbor_internal</link> (const bool get_char=true)</para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1acca76844160000e1d8215cb5c7afbba1">get_cbor_string</link> (<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> &amp;result)</para>

<para>reads a CBOR string </para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aba51092c0779947120d6089211993e86">get_cbor_binary</link> (<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a14ea9b7c18c3d863c47263fc1d7c27a6">internal_binary_t</link> &amp;result)</para>

<para>reads a CBOR byte array </para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1ac3dc99d36754aa0beac506b30604a8ed">get_cbor_array</link> (const std::size_t len)</para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a2fcc776cd2c7bb52bbc511e97d36978a">get_cbor_object</link> (const std::size_t len)</para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a81611d8a5faec1348d31f7e98fcd05ef">parse_msgpack_internal</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a5526ed98ca4c436cbae6f8a77ea207b8">get_msgpack_string</link> (<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> &amp;result)</para>

<para>reads a MessagePack string </para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a885d5531047d7d75608017e5299379be">get_msgpack_binary</link> (<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a14ea9b7c18c3d863c47263fc1d7c27a6">internal_binary_t</link> &amp;result)</para>

<para>reads a MessagePack byte array </para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a09d3eed7523da6f61e7ffa98823aae2b">get_msgpack_array</link> (const std::size_t len)</para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1ad1190bb3499e243b0bbf795743a35563">get_msgpack_object</link> (const std::size_t len)</para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1af60c6bba6f1301cb02e0186c99e25751">parse_ubjson_internal</link> (const bool get_char=true)</para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a2e01eab458020d18c975e8df55b20eca">get_ubjson_string</link> (<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> &amp;result, const bool get_char=true)</para>

<para>reads a UBJSON string </para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a435be58e83c8491556d8f1a1b3439155">get_ubjson_size_value</link> (std::size_t &amp;result)</para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a4eae4604064b5dfe6d04e42ffc9e0753">get_ubjson_size_type</link> (std::pair&lt; std::size_t, int &gt; &amp;result)</para>

<para>determine the type and size for a container </para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a5f425199a77f403e32f076ff8487f853">get_ubjson_value</link> (const int prefix)</para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a4e8ef9561d4403ea68e3c2712fd289e2">get_ubjson_array</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1ad0932dd568fcbbd2b4c2ccf9122544a5">get_ubjson_object</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1af70e7d5f19a2ee196e24f58acf579411">get</link> ()</para>

<para>get next character from the input </para>
</listitem>
            <listitem><para>int <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a11a145292c1cc44656c34a6aef38759c">get_ignore_noop</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename NumberType , bool InputIsLittleEndian = false&gt; </para><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a161cda5919ea2436b7999c2a76656aba">get_number</link> (const <link linkend="_namespacenlohmann_1_1detail_1aa554fc6a11519e4f347deb25a9f0db40">input_format_t</link> format, NumberType &amp;result)</para>
</listitem>
            <listitem><para>template&lt;typename NumberType &gt; </para><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a1f4b5da029a561c8711426b0a7316ec6">get_string</link> (const <link linkend="_namespacenlohmann_1_1detail_1aa554fc6a11519e4f347deb25a9f0db40">input_format_t</link> format, const NumberType len, <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> &amp;result)</para>

<para>create a string by reading characters from the input </para>
</listitem>
            <listitem><para>template&lt;typename NumberType &gt; </para><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a20fa9d391ca0bda037918fe9eb4a5c6b">get_binary</link> (const <link linkend="_namespacenlohmann_1_1detail_1aa554fc6a11519e4f347deb25a9f0db40">input_format_t</link> format, const NumberType len, <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a14ea9b7c18c3d863c47263fc1d7c27a6">internal_binary_t</link> &amp;result)</para>

<para>create a byte array by reading bytes from the input </para>
</listitem>
            <listitem><para>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a91dd7341d9d74c58866877ddfe58dd03">unexpect_eof</link> (const <link linkend="_namespacenlohmann_1_1detail_1aa554fc6a11519e4f347deb25a9f0db40">input_format_t</link> format, const char *context) const</para>
</listitem>
            <listitem><para>std::string <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1acf8d3f7b17efd05655fcb6f47a2eaa79">get_token_string</link> () const</para>
</listitem>
            <listitem><para>std::string <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a82b86133c98a0565446a44dfd3e418e6">exception_message</link> (const <link linkend="_namespacenlohmann_1_1detail_1aa554fc6a11519e4f347deb25a9f0db40">input_format_t</link> format, const std::string &amp;detail, const std::string &amp;context) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespacenlohmann_1_1detail_1ae132f8cd5bb24c5e9b40ad0eafedf1c2">input_adapter_t</link> <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a21ceb754c46a4920b966be7de48c34ad">ia</link> = nullptr</para>

<para>input adapter </para>
</listitem>
            <listitem><para>int <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aadd621ccddf3539f2ed4e2038d531870">current</link> = std::char_traits&lt;char&gt;::eof()</para>

<para>the current character </para>
</listitem>
            <listitem><para>std::size_t <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a287aa2641bfcb0e47f6cd4657692f9a2">chars_read</link> = 0</para>

<para>the number of characters read </para>
</listitem>
            <listitem><para>const bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa846bdda08720535b26d8c90b939bc37">is_little_endian</link> = <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a1e31dbfcf9567c8c2d4f0e4eb1b0230a">little_endianess</link>()</para>

<para>whether we can assume little endianess </para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a43c5dc6a3219f64a7824d7ba9c7b14ae">json_sax_t</link> * <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1ac9313177e414403e3e5784340d838b3f">sax</link> = nullptr</para>

<para>the SAX parser </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename BasicJsonType, typename SAX = json_sax_dom_parser&lt;BasicJsonType&gt;&gt;
class nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</title></simplesect>


<para>deserialization of CBOR, MessagePack, and UBJSON values </para>
<para>
Definition at line 5592 of file json.hpp.</para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a14ea9b7c18c3d863c47263fc1d7c27a6"/>    <section>
    <title>internal_binary_t</title>
<indexterm><primary>internal_binary_t</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>internal_binary_t</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>using <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a14ea9b7c18c3d863c47263fc1d7c27a6">internal_binary_t</link> =  typename BasicJsonType::internal_binary_t<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line 5598 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a43c5dc6a3219f64a7824d7ba9c7b14ae"/>    <section>
    <title>json_sax_t</title>
<indexterm><primary>json_sax_t</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>json_sax_t</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>using <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a43c5dc6a3219f64a7824d7ba9c7b14ae">json_sax_t</link> =  SAX<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line 5599 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1af4488e5400da86636fd2f4d0171bbf53"/>    <section>
    <title>number_float_t</title>
<indexterm><primary>number_float_t</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>number_float_t</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>using <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1af4488e5400da86636fd2f4d0171bbf53">number_float_t</link> =  typename BasicJsonType::number_float_t<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line 5596 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1aa093d9bce6c6ec715a049f2a26d7c4d5"/>    <section>
    <title>number_integer_t</title>
<indexterm><primary>number_integer_t</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>number_integer_t</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>using <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa093d9bce6c6ec715a049f2a26d7c4d5">number_integer_t</link> =  typename BasicJsonType::number_integer_t<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line 5594 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a13bb5e2014c4cdf013d8715157cb456e"/>    <section>
    <title>number_unsigned_t</title>
<indexterm><primary>number_unsigned_t</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>number_unsigned_t</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>using <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a13bb5e2014c4cdf013d8715157cb456e">number_unsigned_t</link> =  typename BasicJsonType::number_unsigned_t<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line 5595 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e"/>    <section>
    <title>string_t</title>
<indexterm><primary>string_t</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>string_t</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>using <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> =  typename BasicJsonType::string_t<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line 5597 of file json.hpp.</para>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1aed84f0302eb232d3b69f7653bef2337a"/>    <section>
    <title>binary_reader()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>binary_reader</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>binary_reader</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::<link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link> (<link linkend="_namespacenlohmann_1_1detail_1ae132f8cd5bb24c5e9b40ad0eafedf1c2">input_adapter_t</link> adapter)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>create a binary reader </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>adapter</entry>
                                <entry>
<para>input adapter to read from </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 5607 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1aacbece7dfa1698dfb3f22c90922d7244"/>    <section>
    <title>binary_reader()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>binary_reader</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>binary_reader</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::<link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link> (const <link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link>&lt; BasicJsonType, SAX &gt; &amp; )<computeroutput>[delete]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a254d91b10c2f4579634b6f70ffc1ef16"/>    <section>
    <title>binary_reader()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>binary_reader</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>binary_reader</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::<link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link> (<link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link>&lt; BasicJsonType, SAX &gt; &amp;&amp; )<computeroutput>[default]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a18e0a63e22dbdad5f6964276b81b813a"/>    <section>
    <title>~binary_reader()</title>
<indexterm><primary>~binary_reader</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>~binary_reader</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::~<link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link> ( )<computeroutput>[default]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a82b86133c98a0565446a44dfd3e418e6"/>    <section>
    <title>exception_message()</title>
<indexterm><primary>exception_message</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>exception_message</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>std::string <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::exception_message (const <link linkend="_namespacenlohmann_1_1detail_1aa554fc6a11519e4f347deb25a9f0db40">input_format_t</link> format, const std::string &amp; detail, const std::string &amp; context) const<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>format</entry>
                                <entry>
<para>the current format </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>detail</entry>
                                <entry>
<para>a detailed error message </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>context</entry>
                                <entry>
<para>further context information </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>a message string to use in the <link linkend="_classnlohmann_1_1detail_1_1parse__error">parse_error</link> exceptions </para>
</formalpara>
</para>
<para>
Definition at line 7808 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1af70e7d5f19a2ee196e24f58acf579411"/>    <section>
    <title>get()</title>
<indexterm><primary>get</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>int <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>get next character from the input </para>
</para>

<para>This function provides the interface to the used input adapter. It does not throw in case the input reached EOF, but returns a -&apos;ve valued <computeroutput>std::char_traits&lt;char&gt;::eof()</computeroutput> in that case.</para>

<para><formalpara><title>Returns</title>

<para>character read from the input </para>
</formalpara>
</para>
<para>
Definition at line 7650 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a20fa9d391ca0bda037918fe9eb4a5c6b"/>    <section>
    <title>get_binary()</title>
<indexterm><primary>get_binary</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_binary</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><computeroutput>template&lt;typename NumberType &gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_binary (const <link linkend="_namespacenlohmann_1_1detail_1aa554fc6a11519e4f347deb25a9f0db40">input_format_t</link> format, const NumberType len, <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a14ea9b7c18c3d863c47263fc1d7c27a6">internal_binary_t</link> &amp; result)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>create a byte array by reading bytes from the input </para>
</para>

<para>
                <formalpara>
                    <title>
Template Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>NumberType</entry>
                                <entry>
<para>the type of the number </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>format</entry>
                                <entry>
<para>the current format (for diagnostics) </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>len</entry>
                                <entry>
<para>number of bytes to read </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>result</entry>
                                <entry>
<para>byte array created by reading <emphasis>len</emphasis> bytes</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether byte array creation completed</para>
</formalpara>
<note><title>Note</title>

<para>We can not reserve <emphasis>len</emphasis> bytes for the result, because <emphasis>len</emphasis> may be too large. Usually, <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a91dd7341d9d74c58866877ddfe58dd03">unexpect_eof()</link> detects the end of the input before we run out of memory. </para>
</note>
</para>
<para>
Definition at line 7759 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a5aca213426204f72a36d7626eeb13bb4"/>    <section>
    <title>get_bson_binary()</title>
<indexterm><primary>get_bson_binary</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_bson_binary</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><computeroutput>template&lt;typename NumberType &gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_bson_binary (const NumberType len, <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a14ea9b7c18c3d863c47263fc1d7c27a6">internal_binary_t</link> &amp; result)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Parses a byte array input of length <emphasis>len</emphasis> from the BSON input. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>len</entry>
                                <entry>
<para>The length of the byte array to be read. </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>result</entry>
                                <entry>
<para>A reference to the binary variable where the read array is to be stored. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>NumberType</entry>
                                <entry>
<para>The type of the length <emphasis>len</emphasis> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Precondition</title>

<para>len &gt;= 0 </para>
</formalpara>
<formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if the byte array was successfully parsed </para>
</formalpara>
</para>
<para>
Definition at line 5778 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a075d20a35a09496c504c7dff135823ed"/>    <section>
    <title>get_bson_cstr()</title>
<indexterm><primary>get_bson_cstr</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_bson_cstr</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_bson_cstr (<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> &amp; result)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Parses a C-style string from the BSON input. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>result</entry>
                                <entry>
<para>A reference to the string variable where the read string is to be stored. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if the \x00-byte indicating the end of the string was encountered before the EOF; false` indicates an unexpected EOF. </para>
</formalpara>
</para>
<para>
Definition at line 5725 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a46bf64d7193eea97cac6dd4d4abdb4fa"/>    <section>
    <title>get_bson_string()</title>
<indexterm><primary>get_bson_string</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_bson_string</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><computeroutput>template&lt;typename NumberType &gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_bson_string (const NumberType len, <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> &amp; result)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Parses a zero-terminated string of length <emphasis>len</emphasis> from the BSON input. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>len</entry>
                                <entry>
<para>The length (including the zero-byte at the end) of the string to be read. </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>result</entry>
                                <entry>
<para>A reference to the string variable where the read string is to be stored. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>NumberType</entry>
                                <entry>
<para>The type of the length <emphasis>len</emphasis> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Precondition</title>

<para>len &gt;= 1 </para>
</formalpara>
<formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if the string was successfully parsed </para>
</formalpara>
</para>
<para>
Definition at line 5757 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1ac3dc99d36754aa0beac506b30604a8ed"/>    <section>
    <title>get_cbor_array()</title>
<indexterm><primary>get_cbor_array</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_cbor_array</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_cbor_array (const std::size_t len)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>len</entry>
                                <entry>
<para>the length of the array or std::size_t(-1) for an array of indefinite size </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether array creation completed </para>
</formalpara>
</para>
<para>
Definition at line 6508 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1aba51092c0779947120d6089211993e86"/>    <section>
    <title>get_cbor_binary()</title>
<indexterm><primary>get_cbor_binary</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_cbor_binary</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_cbor_binary (<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a14ea9b7c18c3d863c47263fc1d7c27a6">internal_binary_t</link> &amp; result)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>reads a CBOR byte array </para>
</para>

<para>This function first reads starting bytes to determine the expected byte array length and then copies this number of bytes into the byte array. Additionally, CBOR&apos;s byte arrays with indefinite lengths are supported.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>result</entry>
                                <entry>
<para>created byte array</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether byte array creation completed </para>
</formalpara>
</para>
<para>
Definition at line 6419 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a2fcc776cd2c7bb52bbc511e97d36978a"/>    <section>
    <title>get_cbor_object()</title>
<indexterm><primary>get_cbor_object</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_cbor_object</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_cbor_object (const std::size_t len)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>len</entry>
                                <entry>
<para>the length of the object or std::size_t(-1) for an object of indefinite size </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether object creation completed </para>
</formalpara>
</para>
<para>
Definition at line 6544 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1acca76844160000e1d8215cb5c7afbba1"/>    <section>
    <title>get_cbor_string()</title>
<indexterm><primary>get_cbor_string</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_cbor_string</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_cbor_string (<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> &amp; result)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>reads a CBOR string </para>
</para>

<para>This function first reads starting bytes to determine the expected string length and then copies this number of bytes into a string. Additionally, CBOR&apos;s strings with indefinite lengths are supported.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>result</entry>
                                <entry>
<para>created string</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether string creation completed </para>
</formalpara>
</para>
<para>
Definition at line 6324 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a11a145292c1cc44656c34a6aef38759c"/>    <section>
    <title>get_ignore_noop()</title>
<indexterm><primary>get_ignore_noop</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_ignore_noop</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>int <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_ignore_noop ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para><formalpara><title>Returns</title>

<para>character read from the input after ignoring all &apos;N&apos; entries </para>
</formalpara>
</para>
<para>
Definition at line 7659 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a09d3eed7523da6f61e7ffa98823aae2b"/>    <section>
    <title>get_msgpack_array()</title>
<indexterm><primary>get_msgpack_array</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_msgpack_array</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_msgpack_array (const std::size_t len)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>len</entry>
                                <entry>
<para>the length of the array </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether array creation completed </para>
</formalpara>
</para>
<para>
Definition at line 7154 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a885d5531047d7d75608017e5299379be"/>    <section>
    <title>get_msgpack_binary()</title>
<indexterm><primary>get_msgpack_binary</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_msgpack_binary</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_msgpack_binary (<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a14ea9b7c18c3d863c47263fc1d7c27a6">internal_binary_t</link> &amp; result)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>reads a MessagePack byte array </para>
</para>

<para>This function first reads starting bytes to determine the expected byte array length and then copies this number of bytes into a byte array.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>result</entry>
                                <entry>
<para>created byte array</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether byte array creation completed </para>
</formalpara>
</para>
<para>
Definition at line 7058 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1ad1190bb3499e243b0bbf795743a35563"/>    <section>
    <title>get_msgpack_object()</title>
<indexterm><primary>get_msgpack_object</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_msgpack_object</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_msgpack_object (const std::size_t len)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>len</entry>
                                <entry>
<para>the length of the object </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether object creation completed </para>
</formalpara>
</para>
<para>
Definition at line 7176 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a5526ed98ca4c436cbae6f8a77ea207b8"/>    <section>
    <title>get_msgpack_string()</title>
<indexterm><primary>get_msgpack_string</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_msgpack_string</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_msgpack_string (<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> &amp; result)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>reads a MessagePack string </para>
</para>

<para>This function first reads starting bytes to determine the expected string length and then copies this number of bytes into a string.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>result</entry>
                                <entry>
<para>created string</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether string creation completed </para>
</formalpara>
</para>
<para>
Definition at line 6976 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a161cda5919ea2436b7999c2a76656aba"/>    <section>
    <title>get_number()</title>
<indexterm><primary>get_number</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_number</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><computeroutput>template&lt;typename NumberType , bool InputIsLittleEndian = false&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_number (const <link linkend="_namespacenlohmann_1_1detail_1aa554fc6a11519e4f347deb25a9f0db40">input_format_t</link> format, NumberType &amp; result)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line 7684 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a1f4b5da029a561c8711426b0a7316ec6"/>    <section>
    <title>get_string()</title>
<indexterm><primary>get_string</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_string</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><computeroutput>template&lt;typename NumberType &gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_string (const <link linkend="_namespacenlohmann_1_1detail_1aa554fc6a11519e4f347deb25a9f0db40">input_format_t</link> format, const NumberType len, <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> &amp; result)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>create a string by reading characters from the input </para>
</para>

<para>
                <formalpara>
                    <title>
Template Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>NumberType</entry>
                                <entry>
<para>the type of the number </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>format</entry>
                                <entry>
<para>the current format (for diagnostics) </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>len</entry>
                                <entry>
<para>number of characters to read </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>result</entry>
                                <entry>
<para>string created by reading <emphasis>len</emphasis> bytes</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether string creation completed</para>
</formalpara>
<note><title>Note</title>

<para>We can not reserve <emphasis>len</emphasis> bytes for the result, because <emphasis>len</emphasis> may be too large. Usually, <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a91dd7341d9d74c58866877ddfe58dd03">unexpect_eof()</link> detects the end of the input before we run out of string memory. </para>
</note>
</para>
<para>
Definition at line 7727 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1acf8d3f7b17efd05655fcb6f47a2eaa79"/>    <section>
    <title>get_token_string()</title>
<indexterm><primary>get_token_string</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_token_string</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>std::string <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_token_string ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para><formalpara><title>Returns</title>

<para>a string representation of the last read byte </para>
</formalpara>
</para>
<para>
Definition at line 7795 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a4e8ef9561d4403ea68e3c2712fd289e2"/>    <section>
    <title>get_ubjson_array()</title>
<indexterm><primary>get_ubjson_array</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_ubjson_array</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_ubjson_array ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para><formalpara><title>Returns</title>

<para>whether array creation completed </para>
</formalpara>
</para>
<para>
Definition at line 7500 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1ad0932dd568fcbbd2b4c2ccf9122544a5"/>    <section>
    <title>get_ubjson_object()</title>
<indexterm><primary>get_ubjson_object</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_ubjson_object</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_ubjson_object ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para><formalpara><title>Returns</title>

<para>whether object creation completed </para>
</formalpara>
</para>
<para>
Definition at line 7562 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a4eae4604064b5dfe6d04e42ffc9e0753"/>    <section>
    <title>get_ubjson_size_type()</title>
<indexterm><primary>get_ubjson_size_type</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_ubjson_size_type</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_ubjson_size_type (std::pair&lt; std::size_t, int &gt; &amp; result)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>determine the type and size for a container </para>
</para>

<para>In the optimized UBJSON format, a type and a size can be provided to allow for a more compact representation.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>result</entry>
                                <entry>
<para>pair of the size and the type</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether pair creation completed </para>
</formalpara>
</para>
<para>
Definition at line 7363 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a435be58e83c8491556d8f1a1b3439155"/>    <section>
    <title>get_ubjson_size_value()</title>
<indexterm><primary>get_ubjson_size_value</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_ubjson_size_value</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_ubjson_size_value (std::size_t &amp; result)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>result</entry>
                                <entry>
<para>determined size </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether size determination completed </para>
</formalpara>
</para>
<para>
Definition at line 7286 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a2e01eab458020d18c975e8df55b20eca"/>    <section>
    <title>get_ubjson_string()</title>
<indexterm><primary>get_ubjson_string</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_ubjson_string</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_ubjson_string (<link linkend="_classnlohmann_1_1detail_1_1binary__reader_1aa0b9729917ca7ee6ed01e3792341316e">string_t</link> &amp; result, const bool get_char = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>reads a UBJSON string </para>
</para>

<para>This function is either called after reading the &apos;S&apos; byte explicitly indicating a string, or in case of an object key where the &apos;S&apos; byte can be left out.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>result</entry>
                                <entry>
<para>created string </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>get_char</entry>
                                <entry>
<para>whether a new character should be retrieved from the input (true, default) or whether the last read character should be considered instead</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether string creation completed </para>
</formalpara>
</para>
<para>
Definition at line 7232 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a5f425199a77f403e32f076ff8487f853"/>    <section>
    <title>get_ubjson_value()</title>
<indexterm><primary>get_ubjson_value</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>get_ubjson_value</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::get_ubjson_value (const int prefix)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>prefix</entry>
                                <entry>
<para>the previously read or set type prefix </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether value creation completed </para>
</formalpara>
</para>
<para>
Definition at line 7404 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a1e31dbfcf9567c8c2d4f0e4eb1b0230a"/>    <section>
    <title>little_endianess()</title>
<indexterm><primary>little_endianess</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>little_endianess</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>static constexpr bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::little_endianess (int num = <computeroutput>1</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>determine system byte order </para>
</para>

<para><formalpara><title>Returns</title>

<para>true if and only if system&apos;s byte order is little endian</para>
</formalpara>
<note><title>Note</title>

<para>from <link xlink:href="https://stackoverflow.com/a/1001328/266378">https://stackoverflow.com/a/1001328/266378</link> </para>
</note>
</para>
<para>
Definition at line 5686 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a7ba0e555da725a2efa17048e67aec9a9"/>    <section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link>&amp; <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::operator= (<link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link>&lt; BasicJsonType, SAX &gt; &amp;&amp; )<computeroutput>[default]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a87826b833ee7fec146c97233bb0f6ab8"/>    <section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link>&amp; <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::operator= (const <link linkend="_classnlohmann_1_1detail_1_1binary__reader">binary_reader</link>&lt; BasicJsonType, SAX &gt; &amp; )<computeroutput>[delete]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a650dd6f9f05e86eb62cd4717301a5ffa"/>    <section>
    <title>parse_bson_array()</title>
<indexterm><primary>parse_bson_array</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>parse_bson_array</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::parse_bson_array ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Reads an array from the BSON input and passes it to the SAX-parser. </para>
</para>

<para><formalpara><title>Returns</title>

<para>whether a valid BSON-array was passed to the SAX parser </para>
</formalpara>
</para>
<para>
Definition at line 5918 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a2fdd24de008063e7fef896327daeffa1"/>    <section>
    <title>parse_bson_element_internal()</title>
<indexterm><primary>parse_bson_element_internal</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>parse_bson_element_internal</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::parse_bson_element_internal (const int element_type, const std::size_t element_type_parse_position)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Read a BSON document element of the given <emphasis>element_type</emphasis>. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>element_type</entry>
                                <entry>
<para>The BSON element type, c.f. <link xlink:href="http://bsonspec.org/spec.html">http://bsonspec.org/spec.html</link> </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>element_type_parse_position</entry>
                                <entry>
<para>The position in the input stream, where the <computeroutput>element_type</computeroutput> was read. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <warning><title>Warning</title>

<para>Not all BSON element types are supported yet. An unsupported <emphasis>element_type</emphasis> will give rise to a parse_error.114: Unsupported BSON record type 0x... </para>
</warning>
<formalpara><title>Returns</title>

<para>whether a valid BSON-object/array was passed to the SAX parser </para>
</formalpara>
</para>
<para>
Definition at line 5802 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a7316619ace9efdc718d04e7b8f807e1e"/>    <section>
    <title>parse_bson_element_list()</title>
<indexterm><primary>parse_bson_element_list</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>parse_bson_element_list</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::parse_bson_element_list (const bool is_array)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Read a BSON element list (as specified in the BSON-spec) </para>
</para>

<para>The same binary layout is used for objects and arrays, hence it must be indicated with the argument <emphasis>is_array</emphasis> which one is expected (true --&gt; array, false --&gt; object).</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>is_array</entry>
                                <entry>
<para>Determines if the element list being read is to be treated as an object (<emphasis>is_array</emphasis> == false), or as an array (<emphasis>is_array</emphasis> == true). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether a valid BSON-object/array was passed to the SAX parser </para>
</formalpara>
</para>
<para>
Definition at line 5880 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a950f6ef800421fef9499af1c4c8918f5"/>    <section>
    <title>parse_bson_internal()</title>
<indexterm><primary>parse_bson_internal</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>parse_bson_internal</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::parse_bson_internal ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Reads in a BSON-object and passes it to the SAX-parser. </para>
</para>

<para><formalpara><title>Returns</title>

<para>whether a valid BSON-value was passed to the SAX parser </para>
</formalpara>
</para>
<para>
Definition at line 5700 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a2fc47768d484a22fcd04e20106da1399"/>    <section>
    <title>parse_cbor_internal()</title>
<indexterm><primary>parse_cbor_internal</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>parse_cbor_internal</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::parse_cbor_internal (const bool get_char = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>get_char</entry>
                                <entry>
<para>whether a new character should be retrieved from the input (true, default) or whether the last read character should be considered instead</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether a valid CBOR value was passed to the SAX parser </para>
</formalpara>
</para>
<para>
Definition at line 5947 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a81611d8a5faec1348d31f7e98fcd05ef"/>    <section>
    <title>parse_msgpack_internal()</title>
<indexterm><primary>parse_msgpack_internal</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>parse_msgpack_internal</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::parse_msgpack_internal ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para><formalpara><title>Returns</title>

<para>whether a valid MessagePack value was passed to the SAX parser </para>
</formalpara>
</para>
<para>
Definition at line 6596 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1af60c6bba6f1301cb02e0186c99e25751"/>    <section>
    <title>parse_ubjson_internal()</title>
<indexterm><primary>parse_ubjson_internal</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>parse_ubjson_internal</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::parse_ubjson_internal (const bool get_char = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>get_char</entry>
                                <entry>
<para>whether a new character should be retrieved from the input (true, default) or whether the last read character should be considered instead</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether a valid UBJSON value was passed to the SAX parser </para>
</formalpara>
</para>
<para>
Definition at line 7213 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1ab94a54d6e595c2620b07589cf4116256"/>    <section>
    <title>sax_parse()</title>
<indexterm><primary>sax_parse</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>sax_parse</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::sax_parse (const <link linkend="_namespacenlohmann_1_1detail_1aa554fc6a11519e4f347deb25a9f0db40">input_format_t</link> format, <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a43c5dc6a3219f64a7824d7ba9c7b14ae">json_sax_t</link> * sax_, const bool strict = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>format</entry>
                                <entry>
<para>the binary format to parse </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>sax_</entry>
                                <entry>
<para>a SAX event processor </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>strict</entry>
                                <entry>
<para>whether to expect the input to be consumed completed</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>
</formalpara>
</para>
<para>
Definition at line 5628 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a91dd7341d9d74c58866877ddfe58dd03"/>    <section>
    <title>unexpect_eof()</title>
<indexterm><primary>unexpect_eof</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>unexpect_eof</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::unexpect_eof (const <link linkend="_namespacenlohmann_1_1detail_1aa554fc6a11519e4f347deb25a9f0db40">input_format_t</link> format, const char * context) const<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>format</entry>
                                <entry>
<para>the current format (for diagnostics) </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>context</entry>
                                <entry>
<para>further context information (for diagnostics) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether the last read character is not EOF </para>
</formalpara>
</para>
<para>
Definition at line 7782 of file json.hpp.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a287aa2641bfcb0e47f6cd4657692f9a2"/>    <section>
    <title>chars_read</title>
<indexterm><primary>chars_read</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>chars_read</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>std::size_t <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::chars_read = 0<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>the number of characters read </para>
</para>
<para>
Definition at line 7847 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1aadd621ccddf3539f2ed4e2038d531870"/>    <section>
    <title>current</title>
<indexterm><primary>current</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>current</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>int <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::current = std::char_traits&lt;char&gt;::eof()<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>the current character </para>
</para>
<para>
Definition at line 7844 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1a21ceb754c46a4920b966be7de48c34ad"/>    <section>
    <title>ia</title>
<indexterm><primary>ia</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>ia</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput><link linkend="_namespacenlohmann_1_1detail_1ae132f8cd5bb24c5e9b40ad0eafedf1c2">input_adapter_t</link> <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::ia = nullptr<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>input adapter </para>
</para>
<para>
Definition at line 7841 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1aa846bdda08720535b26d8c90b939bc37"/>    <section>
    <title>is_little_endian</title>
<indexterm><primary>is_little_endian</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>is_little_endian</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput>const bool <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::is_little_endian = <link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a1e31dbfcf9567c8c2d4f0e4eb1b0230a">little_endianess</link>()<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>whether we can assume little endianess </para>
</para>
<para>
Definition at line 7850 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1binary__reader_1ac9313177e414403e3e5784340d838b3f"/>    <section>
    <title>sax</title>
<indexterm><primary>sax</primary><secondary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::binary_reader&lt; BasicJsonType, SAX &gt;</primary><secondary>sax</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename SAX  = json_sax_dom_parser&lt;BasicJsonType&gt;&gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1binary__reader_1a43c5dc6a3219f64a7824d7ba9c7b14ae">json_sax_t</link>* <link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader</link>&lt; BasicJsonType, SAX &gt;::sax = nullptr<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>the SAX parser </para>
</para>
<para>
Definition at line 7853 of file json.hpp.</para>
</section>
</section>
</section>
