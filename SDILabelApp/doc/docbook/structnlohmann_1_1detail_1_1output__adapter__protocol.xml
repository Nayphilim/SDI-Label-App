<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structnlohmann_1_1detail_1_1output__adapter__protocol">
<title>nlohmann::detail::output_adapter_protocol&lt; CharType &gt; Struct Template Reference</title>
<indexterm><primary>nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</primary></indexterm>
<para>

<para>abstract output adapter interface </para>
 
</para>
<para>
<computeroutput>#include &lt;json.hpp&gt;</computeroutput>
</para>
<para>Inheritance diagram for nlohmann::detail::output_adapter_protocol&lt; CharType &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structnlohmann_1_1detail_1_1output__adapter__protocol.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1output__adapter__protocol_1a3381896fe1be557f591de2e917cdc7d5">write_character</link> (CharType c)=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1output__adapter__protocol_1a2f410a164e0eda17cf6561114b0eee4a">write_characters</link> (const CharType *s, std::size_t length)=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_structnlohmann_1_1detail_1_1output__adapter__protocol_1ad71cdc057030f8a775a191face25061a">~output_adapter_protocol</link> ()=default</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename CharType&gt;
struct nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</title></simplesect>


<para>abstract output adapter interface </para>
<para>
Definition at line 11872 of file json.hpp.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_structnlohmann_1_1detail_1_1output__adapter__protocol_1ad71cdc057030f8a775a191face25061a"/>    <section>
    <title>~output_adapter_protocol()</title>
<indexterm><primary>~output_adapter_protocol</primary><secondary>nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</primary><secondary>~output_adapter_protocol</secondary></indexterm>
<computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput>virtual <link linkend="_structnlohmann_1_1detail_1_1output__adapter__protocol">nlohmann::detail::output_adapter_protocol</link>&lt; CharType &gt;::~<link linkend="_structnlohmann_1_1detail_1_1output__adapter__protocol">output_adapter_protocol</link> ( )<computeroutput>[virtual]</computeroutput>, <computeroutput>[default]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structnlohmann_1_1detail_1_1output__adapter__protocol_1a3381896fe1be557f591de2e917cdc7d5"/>    <section>
    <title>write_character()</title>
<indexterm><primary>write_character</primary><secondary>nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</primary><secondary>write_character</secondary></indexterm>
<computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput>virtual <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1output__adapter__protocol">nlohmann::detail::output_adapter_protocol</link>&lt; CharType &gt;::write_character (CharType c)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classnlohmann_1_1detail_1_1output__string__adapter_1a2d76cc6c88ddbc196a63fcfcac9ee7d1">nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;</link>, <link linkend="_classnlohmann_1_1detail_1_1output__stream__adapter_1a6e2698c76b200b2d8fac6cebfc43a245">nlohmann::detail::output_stream_adapter&lt; CharType &gt;</link>, and <link linkend="_classnlohmann_1_1detail_1_1output__vector__adapter_1af6a22d4210bb7bc2da66021300ddd6db">nlohmann::detail::output_vector_adapter&lt; CharType &gt;</link>.</para>
    </section><anchor xml:id="_structnlohmann_1_1detail_1_1output__adapter__protocol_1a2f410a164e0eda17cf6561114b0eee4a"/>    <section>
    <title>write_characters()</title>
<indexterm><primary>write_characters</primary><secondary>nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</primary><secondary>write_characters</secondary></indexterm>
<computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput>virtual <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1output__adapter__protocol">nlohmann::detail::output_adapter_protocol</link>&lt; CharType &gt;::write_characters (const CharType * s, std::size_t length)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classnlohmann_1_1detail_1_1output__string__adapter_1ab5ea4da075305d225dfd84ad997e8747">nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;</link>, <link linkend="_classnlohmann_1_1detail_1_1output__stream__adapter_1ad61375497a7d03cb0bdcddfdaad185d0">nlohmann::detail::output_stream_adapter&lt; CharType &gt;</link>, and <link linkend="_classnlohmann_1_1detail_1_1output__vector__adapter_1ad6f6c461dec7bedd5359454dc22fc9aa">nlohmann::detail::output_vector_adapter&lt; CharType &gt;</link>.</para>
</section>
</section>
</section>
