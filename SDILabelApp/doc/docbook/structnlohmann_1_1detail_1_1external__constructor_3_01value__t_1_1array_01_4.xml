<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4">
<title>nlohmann::detail::external_constructor&lt; value_t::array &gt; Struct Reference</title>
<indexterm><primary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;json.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename BasicJsonType &gt; </para><para>static <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1abfb2a6eec0bc21e8a7438546aebc55d8">construct</link> (BasicJsonType &amp;j, const typename BasicJsonType::array_t &amp;arr)</para>
</listitem>
            <listitem><para>template&lt;typename BasicJsonType &gt; </para><para>static <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a50474d6624957a630a1d398cac1e7bfa">construct</link> (BasicJsonType &amp;j, typename BasicJsonType::array_t &amp;&amp;arr)</para>
</listitem>
            <listitem><para>template&lt;typename BasicJsonType , typename CompatibleArrayType , enable_if_t&lt; not std::is_same&lt; CompatibleArrayType, typename BasicJsonType::array_t &gt;::value, int &gt;  = 0&gt; </para><para>static <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a110f50fd5378da876d9a6d6a8d945e37">construct</link> (BasicJsonType &amp;j, const CompatibleArrayType &amp;arr)</para>
</listitem>
            <listitem><para>template&lt;typename BasicJsonType &gt; </para><para>static <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a4ebb19b1cb84b4cb224a4c5322e16f14">construct</link> (BasicJsonType &amp;j, const std::vector&lt; bool &gt; &amp;arr)</para>
</listitem>
            <listitem><para>template&lt;typename BasicJsonType , typename T , enable_if_t&lt; std::is_convertible&lt; T, BasicJsonType &gt;::value, int &gt;  = 0&gt; </para><para>static <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a1b9226304e6492141080b4ebf228ddac">construct</link> (BasicJsonType &amp;j, const std::valarray&lt; T &gt; &amp;arr)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line 3909 of file json.hpp.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a110f50fd5378da876d9a6d6a8d945e37"/>    <section>
    <title>construct()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>construct</primary><secondary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</primary><secondary>construct</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename CompatibleArrayType , enable_if_t&lt; not std::is_same&lt; CompatibleArrayType, typename BasicJsonType::array_t &gt;::value, int &gt;  = 0&gt; </computeroutput><para><computeroutput>static <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor">nlohmann::detail::external_constructor</link>&lt; <link linkend="_namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5">value_t::array</link> &gt;::construct (BasicJsonType &amp; j, const CompatibleArrayType &amp; arr)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line 3930 of file json.hpp.</para>
    </section><anchor xml:id="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a1b9226304e6492141080b4ebf228ddac"/>    <section>
    <title>construct()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>construct</primary><secondary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</primary><secondary>construct</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename T , enable_if_t&lt; std::is_convertible&lt; T, BasicJsonType &gt;::value, int &gt;  = 0&gt; </computeroutput><para><computeroutput>static <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor">nlohmann::detail::external_constructor</link>&lt; <link linkend="_namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5">value_t::array</link> &gt;::construct (BasicJsonType &amp; j, const std::valarray&lt; T &gt; &amp; arr)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line 3954 of file json.hpp.</para>
    </section><anchor xml:id="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a4ebb19b1cb84b4cb224a4c5322e16f14"/>    <section>
    <title>construct()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>construct</primary><secondary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</primary><secondary>construct</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput>static <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor">nlohmann::detail::external_constructor</link>&lt; <link linkend="_namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5">value_t::array</link> &gt;::construct (BasicJsonType &amp; j, const std::vector&lt; bool &gt; &amp; arr)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line 3940 of file json.hpp.</para>
    </section><anchor xml:id="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1abfb2a6eec0bc21e8a7438546aebc55d8"/>    <section>
    <title>construct()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>construct</primary><secondary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</primary><secondary>construct</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput>static <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor">nlohmann::detail::external_constructor</link>&lt; <link linkend="_namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5">value_t::array</link> &gt;::construct (BasicJsonType &amp; j, const typename BasicJsonType::array_t &amp; arr)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line 3912 of file json.hpp.</para>
    </section><anchor xml:id="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a50474d6624957a630a1d398cac1e7bfa"/>    <section>
    <title>construct()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>construct</primary><secondary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</primary><secondary>construct</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput>static <link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor">nlohmann::detail::external_constructor</link>&lt; <link linkend="_namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5">value_t::array</link> &gt;::construct (BasicJsonType &amp; j, typename BasicJsonType::array_t &amp;&amp; arr)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line 3920 of file json.hpp.</para>
</section>
</section>
</section>
