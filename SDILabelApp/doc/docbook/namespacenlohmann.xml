<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespacenlohmann">
<title>nlohmann Namespace Reference</title>
<indexterm><primary>nlohmann</primary></indexterm>
<para>

<para>namespace for Niels Lohmann </para>
 
</para>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para> <link linkend="_namespacenlohmann_1_1detail">detail</link></para>

<para>detail namespace with internal helper functions </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structnlohmann_1_1adl__serializer">adl_serializer</link></para>

<para>default JSONSerializer template argument </para>
</listitem>
            <listitem><para>class <link linkend="_classnlohmann_1_1basic__json">basic_json</link></para>

<para>a class to store JSON values </para>
</listitem>
            <listitem><para>class <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link></para>

<para>JSON Pointer. </para>
</listitem>
            <listitem><para>struct <link linkend="_structnlohmann_1_1json__sax">json_sax</link></para>

<para>SAX interface. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_namespacenlohmann_1a2bfd99e845a2e5cd90aeaf1b1431f474">json</link> = <link linkend="_classnlohmann_1_1basic__json">basic_json</link>&lt;&gt;</para>

<para>default JSON class </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_json_8hpp_1a0643bd74c2dc6f0e4e420b8190ea8f0f">NLOHMANN_BASIC_JSON_TPL_DECLARATION</link> std::string <link linkend="_namespacenlohmann_1a6ce645a0b8717757e096a5b5773b7a16">to_string</link> (const <link linkend="_json_8hpp_1a80b7254e63f199a1f656f07ae551f632">NLOHMANN_BASIC_JSON_TPL</link> &amp;j)</para>

<para>user-defined to_string function for JSON values </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>namespace for Niels Lohmann </para>

<para>namespace to hold default <computeroutput>to_json</computeroutput> function</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://github.com/nlohmann">https://github.com/nlohmann</link> </para>
</formalpara>
<formalpara><title>Since</title>

<para>version 1.0.0 </para>
</formalpara>
</para>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_namespacenlohmann_1a2bfd99e845a2e5cd90aeaf1b1431f474"/>    <section>
    <title>json</title>
<indexterm><primary>json</primary><secondary>nlohmann</secondary></indexterm>
<indexterm><primary>nlohmann</primary><secondary>json</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespacenlohmann_1a2bfd99e845a2e5cd90aeaf1b1431f474">nlohmann::json</link> = typedef <link linkend="_classnlohmann_1_1basic__json">basic_json</link>&lt;&gt;</computeroutput></para><para>

<para>default JSON class </para>
</para>

<para>This type is the default specialization of the <link linkend="_classnlohmann_1_1basic__json">basic_json</link> class which uses the standard template types.</para>

<para><formalpara><title>Since</title>

<para>version 1.0.0 </para>
</formalpara>
</para>
<para>
Definition at line 2763 of file json.hpp.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespacenlohmann_1a6ce645a0b8717757e096a5b5773b7a16"/>    <section>
    <title>to_string()</title>
<indexterm><primary>to_string</primary><secondary>nlohmann</secondary></indexterm>
<indexterm><primary>nlohmann</primary><secondary>to_string</secondary></indexterm>
<para><computeroutput><link linkend="_json_8hpp_1a0643bd74c2dc6f0e4e420b8190ea8f0f">NLOHMANN_BASIC_JSON_TPL_DECLARATION</link> std::string nlohmann::to_string (const <link linkend="_json_8hpp_1a80b7254e63f199a1f656f07ae551f632">NLOHMANN_BASIC_JSON_TPL</link> &amp; j)</computeroutput></para><para>

<para>user-defined to_string function for JSON values </para>
</para>

<para>This function implements a user-defined to_string for JSON objects.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>j</entry>
                                <entry>
<para>a JSON object </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>a std::string object </para>
</formalpara>
</para>
<para>
Definition at line 23991 of file json.hpp.</para>
</section>
</section>
</section>
