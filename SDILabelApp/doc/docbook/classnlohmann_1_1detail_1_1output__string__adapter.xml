<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classnlohmann_1_1detail_1_1output__string__adapter">
<title>nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt; Class Template Reference</title>
<indexterm><primary>nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;</primary></indexterm>
<para>

<para>output adapter for basic_string </para>
 
</para>
<para>
<computeroutput>#include &lt;json.hpp&gt;</computeroutput>
</para>
<para>Inheritance diagram for nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1detail_1_1output__string__adapter.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1output__string__adapter_1af3a49ecd0d23fe56ac21e13d8752abc7">output_string_adapter</link> (StringType &amp;s) noexcept</para>
</listitem>
            <listitem><para><link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_classnlohmann_1_1detail_1_1output__string__adapter_1a2d76cc6c88ddbc196a63fcfcac9ee7d1">write_character</link> (CharType c) override</para>
</listitem>
            <listitem><para><link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_classnlohmann_1_1detail_1_1output__string__adapter_1ab5ea4da075305d225dfd84ad997e8747">write_characters</link> (const CharType *s, std::size_t length) override</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>StringType &amp; <link linkend="_classnlohmann_1_1detail_1_1output__string__adapter_1ae57cf7d5c5ec641e25860bb9fb8e6cb9">str</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename CharType, typename StringType = std::basic_string&lt;CharType&gt;&gt;
class nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;</title></simplesect>


<para>output adapter for basic_string </para>
<para>
Definition at line 11933 of file json.hpp.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classnlohmann_1_1detail_1_1output__string__adapter_1af3a49ecd0d23fe56ac21e13d8752abc7"/>    <section>
    <title>output_string_adapter()</title>
<indexterm><primary>output_string_adapter</primary><secondary>nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;</primary><secondary>output_string_adapter</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename StringType  = std::basic_string&lt;CharType&gt;&gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1output__string__adapter">nlohmann::detail::output_string_adapter</link>&lt; CharType, StringType &gt;::<link linkend="_classnlohmann_1_1detail_1_1output__string__adapter">output_string_adapter</link> (StringType &amp; s)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 11936 of file json.hpp.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classnlohmann_1_1detail_1_1output__string__adapter_1a2d76cc6c88ddbc196a63fcfcac9ee7d1"/>    <section>
    <title>write_character()</title>
<indexterm><primary>write_character</primary><secondary>nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;</primary><secondary>write_character</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename StringType  = std::basic_string&lt;CharType&gt;&gt; </computeroutput><para><computeroutput><link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_classnlohmann_1_1detail_1_1output__string__adapter">nlohmann::detail::output_string_adapter</link>&lt; CharType, StringType &gt;::write_character (CharType c)<computeroutput>[inline]</computeroutput>, <computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_structnlohmann_1_1detail_1_1output__adapter__protocol_1a3381896fe1be557f591de2e917cdc7d5">nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</link>.</para>
<para>
Definition at line 11940 of file json.hpp.</para>
    </section><anchor xml:id="_classnlohmann_1_1detail_1_1output__string__adapter_1ab5ea4da075305d225dfd84ad997e8747"/>    <section>
    <title>write_characters()</title>
<indexterm><primary>write_characters</primary><secondary>nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;</primary><secondary>write_characters</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename StringType  = std::basic_string&lt;CharType&gt;&gt; </computeroutput><para><computeroutput><link linkend="_namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d">void</link> <link linkend="_classnlohmann_1_1detail_1_1output__string__adapter">nlohmann::detail::output_string_adapter</link>&lt; CharType, StringType &gt;::write_characters (const CharType * s, std::size_t length)<computeroutput>[inline]</computeroutput>, <computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_structnlohmann_1_1detail_1_1output__adapter__protocol_1a2f410a164e0eda17cf6561114b0eee4a">nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</link>.</para>
<para>
Definition at line 11946 of file json.hpp.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classnlohmann_1_1detail_1_1output__string__adapter_1ae57cf7d5c5ec641e25860bb9fb8e6cb9"/>    <section>
    <title>str</title>
<indexterm><primary>str</primary><secondary>nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::output_string_adapter&lt; CharType, StringType &gt;</primary><secondary>str</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename StringType  = std::basic_string&lt;CharType&gt;&gt; </computeroutput><para><computeroutput>StringType&amp; <link linkend="_classnlohmann_1_1detail_1_1output__string__adapter">nlohmann::detail::output_string_adapter</link>&lt; CharType, StringType &gt;::str<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line 11952 of file json.hpp.</para>
</section>
</section>
</section>
